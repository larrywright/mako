#!/usr/bin/env ruby

require 'fileutils'
require 'erb'


name = ARGV[0]

if name.empty?
  puts "Usage: 'ratpack Foo'"
  exit(1)
end

base_name = name.downcase

base_dir = FileUtils.pwd() + "/#{base_name}"
template_dir = File.expand_path("../../templates", __FILE__)

FileUtils.mkdir(base_dir) unless File.exists?(base_dir)

 %w{public views spec models config}.each do |dir|
  FileUtils.mkdir("#{base_name}/#{dir}") unless File.exists?("#{base_name}/#{dir}")
 end

#put .gitignore in directories that will be empty so that Git will retain them
 %w{spec models config}.each do |dir|
  FileUtils.touch("#{base_name}/#{dir}/.gitignore") unless File.exists?("#{base_name}/#{dir}/.gitignore")
 end

FileUtils.cp_r("#{template_dir}/public/","#{base_dir}/")
FileUtils.cp_r("#{template_dir}/views/","#{base_dir}/")
FileUtils.cp("#{template_dir}/Gemfile","#{base_dir}/Gemfile")
FileUtils.cp("#{template_dir}/.gitignore","#{base_dir}/.gitignore")
FileUtils.touch("#{base_dir}/README.md")

File.open("#{base_dir}/config.ru",'w') do |f|
  config = ERB.new(File.open("#{template_dir}/config.ru.erb").read)
  f.write(config.result)
end

File.open("#{base_dir}/#{base_name}.rb",'w') do |f|
  config = ERB.new(File.open("#{template_dir}/app.rb.erb").read)
  f.write(config.result)
end


FileUtils.cd(base_dir)
`git init && git add . && git commit -m 'Inital import'`
